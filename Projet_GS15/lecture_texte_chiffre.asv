function [ texte_blocs_hex ] = lecture_texte_chiffre(choix_imp, Nk)

% Lire le fichier d'entree
string = './chiffrer.txt';
fid = fopen(string);
texte_chiffre = fread(fid);
fclose(fid);
texte_chiffre_bin = dec2bin(texte_chiffre,8);

if choix_imp=='1'
    matrice_arrange=[1 41 2 42 3 43 4 44 5 45 6 46 7 47 8 48;
                     9 49 10 50 11 51 12 52 13 53 14 54 15 55 16 56;
                     17 57 18 58 19 59 20 60 21 61 22 62 23 63 24 64;
                     25 65 26 66 27 67 28 68 29 69 30 70 31 71 32 72;
                     33 73 34 74 35 75 36 76 37 77 38 78 39 79 40 80];
elseif choix_imp=='2'
    matrice_arrange=[1 61 2 62 3 63 4 64 5 65 6 66 7 67 8 68 9 69 10 70 11 71 12 72;
                     13 73 14 74 15 75 16 76 17 77 18 78 19 79 20 80 21 81 22 82 23 83 24 84;
                     25 85 26 86 27 87 28 88 29 89 30 90 31 91 32 92 33 93 34 94 35 95 36 96;
                     37 97 38 98 39 99 40 100 41 101 42 102 43 103 44 104 45 105 46 106 47 107 48 108;
                     49 109 50 110 51 111 52 112 53 113 54 114 55 115 56 116 57 117 58 118 59 119 60 120];
end

bit_stuff = ceil(size(texte_chiffre_bin,1)/(2*nbreHexDansMot*Nk))*(2*nbreHexDansMot*Nk);
nb_char = bit_stuff - size(texte_chiffre_bin,1);
if bit_stuff > size(texte_chiffre_bin,1),
    for i=size(texte_chiffre_bin,1)+1:bit_stuff
        texte_chiffre_bin(i,:)=texte_chiffre_bin(mod(i,size(texte_chiffre_bin,1))+1,:);
    end
end,

texte_blocs=zeros(5,1);
for i=1:bit_stuff/40
    bloc=texte_chiffre_bin((i-1)*40+1:i*40,:);
    bloc=dec2hex(bin2dec(bloc));
    bloc=bloc(matrice_arrange);
    texte_blocs=[texte_blocs bloc];
end

texte_blocs_hex=texte_blocs(:,2:end);

return,