function [reponse]=PolyMulti(test, alpha_bin)

res=conv(test,alpha_bin);
res=mod((num2str(res)-48),2);

res=[zeros(1,15-size(res,2)) res];
reponse_mat=res(8:15);
if res(1)==1, reponse_mat=xor([0 0 1 0 1 1 1 1], reponse_mat); end
if res(2)==1, reponse_mat=xor([1 0 0 1 1 0 1 0], reponse_mat); end
if res(3)==1, reponse_mat=xor([0 1 0 0 1 1 0 1], reponse_mat); end
if res(4)==1, reponse_mat=xor([1 0 1 0 1 0 1 1], reponse_mat); end
if res(5)==1, reponse_mat=xor([1 1 0 1 1 0 0 0], reponse_mat); end
if res(6)==1, reponse_mat=xor([0 1 1 0 1 1 0 0], reponse_mat); end
if res(7)==1, reponse_mat=xor([], reponse_mat); end

reponse=double(reponse_mat);
% reponse=0;
% for i=1:size(reponse_mat,2)
%     reponse=reponse+reponse_mat(i)*(2^(size(reponse_mat,2)-i));
% end
return,